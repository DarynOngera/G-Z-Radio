---
import MainLayout from '@/layouts/MainLayout.astro';
---

<MainLayout title="My Account">
  <section class="account-section fade-in-section">
    <div class="container">
      <a href="/" class="back-link">‚Üê Back to Main</a>
      <h1>My Account</h1>
      
      <!-- Premium Status -->
      <div class="account-card premium-status-card">
        <h2>üéµ Premium Music Access</h2>
        <div id="premium-status-content">
          <div class="loading">Loading premium status...</div>
        </div>
      </div>
      
      <!-- Order History -->
      <div class="account-card orders-card">
        <h2>üõçÔ∏è Order History</h2>
        <div id="orders-content">
          <div class="loading">Loading orders...</div>
        </div>
      </div>
      
      <!-- Payment History -->
      <div class="account-card payments-card">
        <h2>üí≥ Payment History</h2>
        <div id="payments-content">
          <div class="loading">Loading payments...</div>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<style>
  .account-section {
    min-height: 100vh;
    padding: 2rem 0;
    background: linear-gradient(135deg, #1a1a1a, #2d2d2d);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .back-link {
    display: inline-flex;
    align-items: center;
    color: var(--accent-color-static);
    text-decoration: none;
    font-weight: 600;
    margin-bottom: 2rem;
    transition: all 0.3s ease;
  }

  .back-link:hover {
    transform: translateX(-5px);
    text-shadow: 0 0 10px rgba(255, 215, 0, 0.5);
  }

  h1 {
    color: var(--accent-color-static);
    font-size: 3rem;
    font-weight: 700;
    text-align: center;
    margin-bottom: 3rem;
    text-shadow: 0 0 20px rgba(255, 215, 0, 0.3);
  }

  .account-card {
    background: linear-gradient(135deg, rgba(20, 20, 20, 0.9), rgba(40, 40, 40, 0.9));
    border: 1px solid rgba(255, 215, 0, 0.3);
    border-radius: 20px;
    padding: 2rem;
    margin-bottom: 2rem;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }

  .account-card h2 {
    color: var(--accent-color-static);
    font-size: 1.5rem;
    margin-bottom: 1.5rem;
    font-weight: 600;
  }

  .premium-active {
    background: rgba(255, 215, 0, 0.1);
    border: 2px solid var(--accent-color-static);
    padding: 1.5rem;
    border-radius: 12px;
    text-align: center;
  }

  .premium-badge {
    background: linear-gradient(45deg, var(--accent-color-static), #ffa500);
    color: #000;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    display: inline-block;
    margin-bottom: 1rem;
  }

  .premium-expired {
    background: rgba(255, 0, 0, 0.1);
    border: 1px solid rgba(255, 0, 0, 0.3);
    padding: 1.5rem;
    border-radius: 12px;
    text-align: center;
    color: #ff6b6b;
  }

  .no-premium {
    text-align: center;
    color: rgba(255, 255, 255, 0.7);
    padding: 2rem;
  }

  .get-premium-btn {
    background: linear-gradient(45deg, var(--accent-color-static), #ffa500);
    color: #000;
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 1rem;
  }

  .get-premium-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(255, 215, 0, 0.4);
  }

  .order-item, .payment-item {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 1rem;
    margin-bottom: 1rem;
  }

  .order-header, .payment-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
  }

  .order-id, .payment-id {
    font-family: monospace;
    color: var(--accent-color-static);
    font-size: 0.9rem;
  }

  .order-date, .payment-date {
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.8rem;
  }

  .order-total, .payment-amount {
    color: var(--accent-color-static);
    font-weight: 600;
  }

  .order-items {
    margin-top: 0.5rem;
    padding-top: 0.5rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }

  .order-item-detail {
    display: flex;
    justify-content: space-between;
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.9rem;
    margin-bottom: 0.25rem;
  }

  .loading {
    text-align: center;
    color: rgba(255, 255, 255, 0.6);
    padding: 2rem;
  }

  .empty-state {
    text-align: center;
    color: rgba(255, 255, 255, 0.6);
    padding: 2rem;
  }

  @media (max-width: 768px) {
    .container {
      padding: 0 1rem;
    }

    h1 {
      font-size: 2rem;
    }

    .account-card {
      padding: 1.5rem;
    }

    .order-header, .payment-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    loadPremiumStatus();
    loadOrderHistory();
    loadPaymentHistory();
  });

  function loadPremiumStatus() {
    const container = document.getElementById('premium-status-content');
    
    if (window.PaymentHandler) {
      const status = window.PaymentHandler.checkPremiumStatus();
      
      if (status.active) {
        const expiresAt = new Date(status.expiresAt);
        const daysLeft = Math.ceil((expiresAt - new Date()) / (1000 * 60 * 60 * 24));
        
        container.innerHTML = `
          <div class="premium-active">
            <div class="premium-badge">Premium Active</div>
            <p><strong>Plan:</strong> ${status.plan === 'weekly' ? 'Weekly' : 'Monthly'}</p>
            <p><strong>Expires:</strong> ${expiresAt.toLocaleDateString()}</p>
            <p><strong>Days remaining:</strong> ${daysLeft}</p>
          </div>
        `;
      } else if (status.expired) {
        container.innerHTML = `
          <div class="premium-expired">
            <p><strong>Premium Expired</strong></p>
            <p>Your premium access has expired. Renew to continue enjoying unlimited streaming.</p>
            <button class="get-premium-btn" onclick="window.location.href='/listen'">Renew Premium</button>
          </div>
        `;
      } else {
        container.innerHTML = `
          <div class="no-premium">
            <p>You don't have premium access yet.</p>
            <p>Unlock exclusive tracks and high-quality streaming!</p>
            <button class="get-premium-btn" onclick="window.location.href='/listen'">Get Premium</button>
          </div>
        `;
      }
    } else {
      container.innerHTML = `
        <div class="no-premium">
          <p>Unable to load premium status.</p>
        </div>
      `;
    }
  }

  function loadOrderHistory() {
    const container = document.getElementById('orders-content');
    
    if (window.PaymentHandler) {
      const orders = window.PaymentHandler.getUserOrders();
      
      if (orders.length === 0) {
        container.innerHTML = `
          <div class="empty-state">
            <p>No orders yet. Start shopping to see your order history here!</p>
          </div>
        `;
        return;
      }

      container.innerHTML = orders.map(order => `
        <div class="order-item">
          <div class="order-header">
            <span class="order-id">Order #${order.id.slice(-8)}</span>
            <span class="order-date">${new Date(order.createdAt).toLocaleDateString()}</span>
          </div>
          <div class="order-total">Total: KSh ${order.total.toFixed(2)}</div>
          <div class="order-items">
            ${order.items.map(item => `
              <div class="order-item-detail">
                <span>${item.name} (${item.size}, ${item.color})</span>
                <span>${item.quantity}x KSh ${item.price.toFixed(2)}</span>
              </div>
            `).join('')}
          </div>
        </div>
      `).join('');
    } else {
      container.innerHTML = `
        <div class="empty-state">
          <p>Unable to load order history.</p>
        </div>
      `;
    }
  }

  function loadPaymentHistory() {
    const container = document.getElementById('payments-content');
    
    if (window.PaymentHandler) {
      const payments = window.PaymentHandler.getPaymentHistory();
      
      if (payments.length === 0) {
        container.innerHTML = `
          <div class="empty-state">
            <p>No payment history yet.</p>
          </div>
        `;
        return;
      }

      container.innerHTML = payments.map(payment => `
        <div class="payment-item">
          <div class="payment-header">
            <span class="payment-id">${payment.type === 'music' ? 'üéµ' : 'üõçÔ∏è'} ${payment.type.toUpperCase()}</span>
            <span class="payment-date">${new Date(payment.timestamp).toLocaleDateString()}</span>
          </div>
          <div class="payment-amount">KSh ${payment.amount.toFixed(2)}</div>
          ${payment.type === 'music' ? `<p>Duration: ${payment.duration}</p>` : ''}
          ${payment.items ? `<p>Items: ${payment.items.length} item(s)</p>` : ''}
        </div>
      `).join('');
    } else {
      container.innerHTML = `
        <div class="empty-state">
          <p>Unable to load payment history.</p>
        </div>
      `;
    }
  }
</script>
