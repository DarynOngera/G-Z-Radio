---
import MainLayout from '../../layouts/MainLayout.astro';
import clothingData from '../../data/clothing.json';

export async function getStaticPaths() {
  return clothingData.map((item) => ({ params: { slug: item.slug }, props: { product: item } }));
}

interface Product {
  id: string;
  slug: string;
  name: string;
  images: string[];
  description: string;
  price: number;
  currency: string;
  inStock: boolean;
  stockCount: number;
  sizes: string[];
  colors: Array<{ name: string; hex: string }>;
}

const { product } = Astro.props as { product: Product };
---

<MainLayout title={`${product.name} | G'z Radio Merch`}>
  <div class="detail-wrapper fade-in-section">
    <div class="gallery">
      <img src={product.images[0]} alt={product.name} class="main-img" />
      {product.images.length > 1 && (
        <div class="thumb-row">
          {product.images.map((img, i) => (
            <button class="thumb" data-img={img} aria-label={`View image ${i + 1}`}>
              <img src={img} alt={`Thumbnail ${i + 1}`} />
            </button>
          ))}
        </div>
      )}
    </div>

    <div class="info">
      <h1>{product.name}</h1>
      <p class="price">${product.price.toFixed(2)} {product.currency}</p>
      <p class="desc">{product.description}</p>

      <div class="options">
        {product.sizes.length && (
          <label>
            Size
            <select>
              {product.sizes.map((s) => <option value={s}>{s}</option>)}
            </select>
          </label>
        )}
        {product.colors.length && (
          <div class="colors">
            {product.colors.map((c) => (
              <span class="color" style={`background:${c.hex}`} title={c.name}></span>
            ))}
          </div>
        )}
      </div>

      <button class="add-btn" disabled={!product.inStock}> {product.inStock ? 'Add to Cart' : 'Out of Stock'} </button>
    </div>
  </div>
  <!-- Toast Notification -->
  <div id="toast" hidden>Added to cart</div>

  <script>
    const btn = document.querySelector('.add-btn');
    const toast = document.getElementById('toast');
    btn?.addEventListener('click', () => {
      if (btn.disabled) return;
      // trigger cart add event; assumes global addToCart exists
      if (window.addToCart) {
        window.addToCart({ id: product.id, qty: 1 });
      }
      toast.hidden = false;
      toast.classList.add('show');
      setTimeout(() => {
        toast.classList.remove('show');
        toast.hidden = true;
      }, 2500);
    });
  </script>
</MainLayout>

<style>
.detail-wrapper {
  max-width: 1200px;
  margin: 4rem auto;
  padding: 0 1rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
}

.gallery {
  position: sticky;
  top: 5rem;
}

.main-img {
  width: 100%;
  height: 500px;
  object-fit: cover;
  border-radius: 0.5rem;
}

.thumb-row {
  margin-top: 1rem;
  display: flex;
  gap: 0.5rem;
}

.thumb {
  border: 2px solid transparent;
  padding: 0;
  cursor: pointer;
  border-radius: 0.25rem;
  overflow: hidden;
}
.thumb img { width: 70px; height: 70px; object-fit: cover; display:block; }

.info h1 { margin: 0 0 1rem 0; }
.price { font-size: 1.5rem; color: var(--accent-color-static); margin: 0 0 1rem 0; }
.desc { margin-bottom: 1.5rem; }
.options { margin-bottom: 1.5rem; }
.colors { display:flex; gap:0.5rem; }
.color { width:24px; height:24px; border-radius:50%; border:1px solid #fff3; }
.add-btn { padding:0.75rem 1.5rem; background:var(--accent-color-static); color:#000; border:none; border-radius:0.25rem; cursor:pointer; font-weight:600; }
.add-btn[disabled] { opacity:0.5; cursor:not-allowed; }

#toast {
  position: fixed;
  bottom: 1.5rem;
  left: 50%;
  transform: translateX(-50%) translateY(100%);
  background: var(--accent-color-static);
  color: #000;
  padding: 0.75rem 1.25rem;
  border-radius: 0.25rem;
  font-weight: 600;
  transition: transform 0.4s ease;
  z-index: 9999;
}
#toast.show {
  transform: translateX(-50%) translateY(0);
}

@media (max-width: 768px) {
  .detail-wrapper { grid-template-columns: 1fr; }
  .main-img { height: 350px; }
}
</style>
